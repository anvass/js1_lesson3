// 1) С помощью цикла while вывести все простые числа в промежутке от 0 до 100

// число является простым, если оно больше 1 и, при этом, делится без остатка только на 1 и на себя,
// т.е. n > 1 – простое, если при делении на любое число от 2 до n-1 есть остаток.
// Если остатка нет, то существует число, которое делит без остатка число n => n уже НЕ будет являться простым

// ДЛЯ ТОГО ЧТОБЫ ДОКАЗАТЬ, что натуральное число n простое, достаточно установить,
// что оно НЕ делится ни на одно из чисел от 2 до sqrt(n). Если же  делится на одно из таких чисел, то n - составное.

console.log('------------------Задание 1------------------');

function isPrime(n){
    if (n < 2){
        // console.log('Число', n, 'не может быть простым. Простыми могут быть натуральные числа >2 (0 и отрицательные числа - не являются натуральными, 1 не относят ни к простым, ни к составным)');
        return false;
    }else{
        for (let i = 2; i <= Math.sqrt(n); i++){
            if (n % i === 0){
                // console.log('Число', n,  'составное. Один из делителей = ', i);
                return false;
            }
        }
        // console.log('Число ', n,  'простое');
        return true;
    }
}

let n = 2;
let primesArr = [];

while (n <= 100){

    // 1) можно просто вывести вот так, т.к в функции есть console.log
    // isPrime(n);

    // 2) а можно запихать все в массив и вывести его после цикла
    if (isPrime(n)){
        primesArr.push(n);
    }

    n++;
}

console.log('Массив простых чисел:', primesArr);

//------------------------------------------------------------------------------------------------------------
// 2) С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
// 0 – это ноль
// 1 – нечетное число
// 2 – четное число
// 3 – нечетное число
// …
// 10 – четное число
//
console.log('------------------Задание 2------------------');

let num = 0;

do{
    if (num === 0){
        console.log('', num, ' - это ноль');
    } else if (num % 2 === 1){
        console.log('', num, ' - нечетное число');
    } else {
        console.log('', num, ' - четное число');
    }
    num++;
} while (num <= 10);

//------------------------------------------------------------------------------------------------------------
// 3) * Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. То есть выглядеть должно вот так:
// for(…){// здесь пусто}

console.log('------------------Задание 3------------------');

for(let i = 0; i < 10; console.log(i++)){}

//------------------------------------------------------------------------------------------------------------
// 4) * Нарисовать пирамиду с помощью console.log, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:
// x
// xx
// xxx
// xxxx
// xxxxx

console.log('------------------Задание 4------------------');

let currRow = 0;
let rowCount = 20;
let j, star;

while (currRow < rowCount) {
    star = ""; // обнуляем значение предыдущей строки

    // заполняем текущую строку нужным количеством звездочек
    for (j = 0; j < currRow + 1; j++){
        star += "*";
    }

    console.log(star);
    currRow++;
}

//------------------------------------------------------------------------------------------------------------
// 5) * Начиная с этого урока, мы начинаем работать с функционалом одностраничного интернет-магазина.
// Предположим, что у нас есть сущность корзины.
// Нужно реализовать функционал подсчета стоимости корзины в зависимости от находящихся в ней товаров.
// Товары в корзине хранятся в массиве (пока в виде чисел, которые равны стоимости товара).
// 5.1) Организуйте такой массив для хранения товаров в корзине
// 5.2) Организуйте функцию countBasketPrice (или иное название), которая будет считать стоимость корзины.

console.log('------------------Задание 5------------------');


function isNumeric(n){
    return !isNaN(parseFloat(n)) && isFinite(n);
}

function addItemToBasket(item, arr){
    if (item < 0){
        console.log('Item должен быть положительным числом');
        return false;
    } else if (isNumeric(item)){
        arr.push(item);
        // console.log(arr);
    } else{
        console.log('Item должен быть положительным числом');
        return false;
    }
}

function countBasketPrice(arr){
    let totalPrice = 0;
    for(let i = 0; i < arr.length; i++){
        totalPrice += arr[i];
    }
    console.log('Итого:', totalPrice);
    return totalPrice;
}

let testArr = [], count = 0;

// заполняем массив элементами
while(count < 10){
    let item = Math.round((Math.random() * 1000) + 1); // случайное число от 1 до 1000

    addItemToBasket(item, testArr);

    count++;
}

console.log('Корзина с товарами:', testArr);
countBasketPrice(testArr);





























